/*
Copyright (c) 2018 Daybrush
license: MIT
author: Daybrush
repository: https://github.com/daybrush/shape-svg
@version 0.0.1
*/
!function(t,i){"object"==typeof exports&&"undefined"!=typeof module?module.exports=i():"function"==typeof define&&define.amd?define(i):t.Shape=i()}(this,function(){"use strict";var a=function(){return(a=Object.assign||function(t){for(var i,e=1,n=arguments.length;e<n;e++)for(var o in i=arguments[e])Object.prototype.hasOwnProperty.call(i,o)&&(t[o]=i[o]);return t}).apply(this,arguments)};var x="__shape-svg";function S(t){return document.createElementNS("http://www.w3.org/2000/svg",t)}function L(t){for(var i=t.side,e=void 0===i?3:i,n=t.rotate,o=void 0===n?0:n,r=t.innerRadius,a=void 0===r?100:r,s=t.width,h=void 0===s?0:s,d=t.height,u=void 0===d?0:d,p=t.strokeLinejoin,f=void 0===p?"round":p,c=t.strokeWidth,v=void 0===c?0:c,l=[],M=[],g=Math.cos(Math.PI/e),m=Math.PI/180*o+Math.PI*((e%2?0:1/e)-.5),y=0;y<e;++y){var b=Math.PI*(1/e*2*y)+m,w=Math.cos(b),j=Math.sin(b);if(l.push(w),M.push(j),100!==a){if(g<=a/100)continue;l.push(a/100*Math.cos(b+Math.PI/e)),M.push(a/100*Math.sin(b+Math.PI/e))}}var O=Math.min.apply(Math,l),P=Math.min.apply(Math,M),k=Math.max.apply(Math,l),A=Math.max.apply(Math,M),I=!!h?h/(k-O):u/(A-P),R="miter"===f||"arcs"===f||"miter-clip"===f,x=Math.min(g,a/100),S=I*x,L=R?(S+v/2/(1-x*x))/S:1,W=R?0:v/2;l=l.map(function(t){return(t-O*L)*I+W}),M=M.map(function(t){return(t-P*L)*I+W});var E=(k-O)*L*I+2*W,N=(A-P)*L*I+2*W;return{points:l.map(function(t,i){return[t,M[i]]}),width:E,height:N}}function s(t,i){var e;void 0===i&&((e=S("svg")).setAttribute("class",x),i=e);var n=t.left,o=void 0===n?0:n,r=t.top,a=void 0===r?0:r,s=t.right,h=void 0===s?0:s,d=t.bottom,u=void 0===d?0:d,p=t.strokeWidth,f=t.strokeLinejoin,c=void 0===f?"round":f,v=t.fill,l=void 0===v?"transparent":v,M=t.side,g=t.width,m=t.height,y=t.rotate,b=t.innerRadius,w=void 0===b?100:b,j=function(t,i){var e={};for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&i.indexOf(n)<0&&(e[n]=t[n]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(n=Object.getOwnPropertySymbols(t);o<n.length;o++)i.indexOf(n[o])<0&&(e[n[o]]=t[n[o]])}return e}(t,["left","top","right","bottom","strokeWidth","strokeLinejoin","fill","side","width","height","rotate","innerRadius"]),O=L({side:M,rotate:y,width:g,height:m,innerRadius:w,strokeLinejoin:c,strokeWidth:p}),P=O.points,k=O.width,A=O.height,I=S("polygon");for(var R in i.getAttribute("class")===x&&i.setAttribute("viewBox","0 0 "+(o+k+h)+" "+(a+A+u)),I.setAttribute("fill",l),I.setAttribute("stroke-linejoin",c),I.setAttribute("stroke-width",""+p),I.setAttribute("points",P.map(function(t){return o+t[0]+","+(a+t[1])}).join(" ")),j)I.setAttribute(R,j[R]);return i.appendChild(I),i}return{getRect:L,star:function(t,i){var e=t.side,n=void 0===e?3:e,o=t.innerRadius,r=void 0===o?60*Math.cos(Math.PI/n):o;return s(a({},t,{innerRadius:r}),i)},poly:s,VERSION:"0.0.1"}});
//# sourceMappingURL=shapesvg.min.js.map
