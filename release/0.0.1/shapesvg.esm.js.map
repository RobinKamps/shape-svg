{"version":3,"file":"shapesvg.esm.js","sources":["../src/consts.ts","../src/index.ts"],"sourcesContent":["export const TOP = \"top\";\nexport const BOTTOM = \"bottom\";\nexport const LEFT = \"left\";\nexport const RIGHT = \"right\";\nexport type DIRECTION = \"top\" | \"bottom\" | \"left\" | \"right\";\nexport type STROKE_LINEJOIN = \"bevel\" | \"round\" | \"miter\" | \"miter-clip\" | \"arcs\";\nexport const CLASS_NAME = \"__shape-svg\";\n","import { CLASS_NAME, STROKE_LINEJOIN } from \"./consts\";\n\ninterface SVGInterface {\n  left?: number;\n  top?: number;\n  right?: number;\n  bottom?: number;\n  side?: number;\n  split?: number;\n  width?: number;\n  height?: number;\n  strokeWidth?: number;\n  strokeLinejoin?: STROKE_LINEJOIN;\n  innerRadius?: number;\n  [key: string]: any;\n}\n\nfunction makeDOM(tag: string) {\n  return document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n}\nfunction makeSVGDOM() {\n  const el = makeDOM(\"svg\");\n\n  el.setAttribute(\"class\", CLASS_NAME);\n  return el;\n}\nexport function getRect({\n  side = 3,\n  rotate = 0,\n  innerRadius = 100,\n  width = 0,\n  height = 0,\n  strokeLinejoin = \"round\",\n  strokeWidth = 0,\n}: SVGInterface) {\n  let xPoints: number[] = [];\n  let yPoints: number[] = [];\n  const sideCos = Math.cos(Math.PI / side);\n  const startRad = Math.PI / 180 * rotate +  Math.PI * ((side % 2 ? 0 : 1 / side) - 1 / 2);\n\n  for (let i = 0; i < side; ++i) {\n    const rad = Math.PI * (1 / side * 2 * i) + startRad;\n    const cos = Math.cos(rad);\n    const sin = Math.sin(rad);\n\n    xPoints.push(cos);\n    yPoints.push(sin);\n    if (innerRadius !== 100) {\n      if (sideCos <= innerRadius / 100) {\n        continue;\n      } else {\n        xPoints.push(innerRadius / 100 * Math.cos(rad + Math.PI / side));\n        yPoints.push(innerRadius / 100 * Math.sin(rad + Math.PI / side));\n      }\n    }\n  }\n  const minX = Math.min(...xPoints);\n  const minY = Math.min(...yPoints);\n  const maxX = Math.max(...xPoints);\n  const maxY = Math.max(...yPoints);\n  const isWidth = !!width;\n  const scale = isWidth ? width / (maxX - minX) : height / (maxY - minY);\n  const isOuter = strokeLinejoin === \"miter\" || strokeLinejoin === \"arcs\" || strokeLinejoin === \"miter-clip\";\n  const innerScale = scale * Math.min(sideCos, innerRadius / 100);\n\n  // strokeLinejoin === \"bevel\" ? (scale * Math.min(sideCos, innerRadius / 100) + strokeWidth / 2 ) / scale;\n  const outerScale = isOuter ? (innerScale + strokeWidth / 2) / innerScale : 1;\n  const pos = isOuter ? 0 : strokeWidth / 2;\n\n  xPoints = xPoints.map(xp => (xp - minX * outerScale) * scale + pos);\n  yPoints = yPoints.map(yp => (yp - minY * outerScale) * scale + pos);\n\n  const polygonWidth = (maxX - minX) * outerScale * scale + pos * 2;\n  const polygonHeight = (maxY - minY) * outerScale * scale + pos * 2;\n  const points = xPoints.map((xp, i) => [xp, yPoints[i]]);\n  return {points, width: polygonWidth, height: polygonHeight};\n}\nexport function star({\n  side = 3,\n  innerRadius = 60 * Math.cos(Math.PI / side),\n}: SVGInterface,     container?: SVGAElement) {\n  return poly({...arguments[0], innerRadius}, container);\n}\nexport function poly({\n  left = 0,\n  top = 0,\n  right = 0,\n  bottom = 0,\n  strokeWidth,\n  strokeLinejoin = \"round\",\n  fill = \"transparent\",\n  side,\n  width,\n  height,\n  rotate,\n  innerRadius = 100,\n  ...attributes\n}: SVGInterface,     container: SVGElement = makeSVGDOM()) {\n  const {points, width: polygonWidth, height: polygonHeight } =\n    getRect({side, rotate, width, height, innerRadius, strokeLinejoin, strokeWidth});\n\n  const polygon: SVGPolygonElement = makeDOM(\"polygon\") as SVGPolygonElement;\n\n  if (container.getAttribute(\"class\") === CLASS_NAME) {\n    container.setAttribute(\"viewBox\", `0 0 ${left + polygonWidth + right} ${top + polygonHeight + bottom}`);\n  }\n  polygon.setAttribute(\"fill\", fill);\n  polygon.setAttribute(\"stroke-linejoin\", strokeLinejoin);\n  polygon.setAttribute(\"stroke-width\", `${strokeWidth}`);\n  polygon.setAttribute(\"points\", points.map(point => `${left + point[0]},${top + point[1]}`).join(\" \"));\n\n  for (const name in attributes) {\n    polygon.setAttribute(name, attributes[name]);\n  }\n  container.appendChild(polygon);\n  return container;\n}\nexport const VERSION = \"#__VERSION__#\";\n"],"names":["CLASS_NAME","makeDOM","tag","document","createElementNS","makeSVGDOM","el","setAttribute","getRect","_a","_b","side","_c","rotate","_d","innerRadius","_e","width","_f","height","_g","strokeLinejoin","_h","strokeWidth","xPoints","yPoints","sideCos","Math","cos","PI","startRad","i","rad","sin","push","minX","min","minY","maxX","max","maxY","isWidth","scale","isOuter","innerScale","outerScale","pos","map","xp","yp","polygonWidth","polygonHeight","points","star","container","poly","arguments","left","top","right","bottom","fill","attributes","_j","polygon","getAttribute","point","join","name","appendChild","VERSION"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMO,IAAMA,UAAU,GAAG,aAAnB;;ACWP,SAASC,OAAT,CAAiBC,GAAjB;SACSC,QAAQ,CAACC,eAAT,CAAyB,4BAAzB,EAAuDF,GAAvD,CAAP;;;AAEF,SAASG,UAAT;MACQC,EAAE,GAAGL,OAAO,CAAC,KAAD,CAAlB;EAEAK,EAAE,CAACC,YAAH,CAAgB,OAAhB,EAAyBP,UAAzB;SACOM,EAAP;;;AAEF,SAAgBE,QAAQC;MACtBC;MAAAC;MACAC;MAAAC;MACAC;MAAAC;MACAC;MAAAC;MACAC;MAAAC;MACAC;MAAAC;MACAC;MAAAC;MAEIC,OAAO,GAAa,EAAxB;MACIC,OAAO,GAAa,EAAxB;MACMC,OAAO,GAAGC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,EAAL,GAAUlB,IAAnB,CAAhB;MACMmB,QAAQ,GAAGH,IAAI,CAACE,EAAL,GAAU,GAAV,GAAgBhB,MAAhB,GAA0Bc,IAAI,CAACE,EAAL,IAAW,CAAClB,IAAI,GAAG,CAAP,GAAW,CAAX,GAAe,IAAIA,IAApB,IAA4B,IAAI,CAA3C,CAA3C;;OAEK,IAAIoB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpB,IAApB,EAA0B,EAAEoB,CAA5B,EAA+B;QACvBC,GAAG,GAAGL,IAAI,CAACE,EAAL,IAAW,IAAIlB,IAAJ,GAAW,CAAX,GAAeoB,CAA1B,IAA+BD,QAA3C;QACMF,GAAG,GAAGD,IAAI,CAACC,GAAL,CAASI,GAAT,CAAZ;QACMC,GAAG,GAAGN,IAAI,CAACM,GAAL,CAASD,GAAT,CAAZ;IAEAR,OAAO,CAACU,IAAR,CAAaN,GAAb;IACAH,OAAO,CAACS,IAAR,CAAaD,GAAb;;QACIlB,WAAW,KAAK,GAApB,EAAyB;UACnBW,OAAO,IAAIX,WAAW,GAAG,GAA7B,EAAkC;;OAAlC,MAEO;QACLS,OAAO,CAACU,IAAR,CAAanB,WAAW,GAAG,GAAd,GAAoBY,IAAI,CAACC,GAAL,CAASI,GAAG,GAAGL,IAAI,CAACE,EAAL,GAAUlB,IAAzB,CAAjC;QACAc,OAAO,CAACS,IAAR,CAAanB,WAAW,GAAG,GAAd,GAAoBY,IAAI,CAACM,GAAL,CAASD,GAAG,GAAGL,IAAI,CAACE,EAAL,GAAUlB,IAAzB,CAAjC;;;;;MAIAwB,IAAI,GAAGR,IAAI,CAACS,GAAL,MAAA,CAAAT,IAAA,EAAYH,OAAZ,CAAb;MACMa,IAAI,GAAGV,IAAI,CAACS,GAAL,MAAA,CAAAT,IAAA,EAAYF,OAAZ,CAAb;MACMa,IAAI,GAAGX,IAAI,CAACY,GAAL,MAAA,CAAAZ,IAAA,EAAYH,OAAZ,CAAb;MACMgB,IAAI,GAAGb,IAAI,CAACY,GAAL,MAAA,CAAAZ,IAAA,EAAYF,OAAZ,CAAb;MACMgB,OAAO,GAAG,CAAC,CAACxB,KAAlB;MACMyB,KAAK,GAAGD,OAAO,GAAGxB,KAAK,IAAIqB,IAAI,GAAGH,IAAX,CAAR,GAA2BhB,MAAM,IAAIqB,IAAI,GAAGH,IAAX,CAAtD;MACMM,OAAO,GAAGtB,cAAc,KAAK,OAAnB,IAA8BA,cAAc,KAAK,MAAjD,IAA2DA,cAAc,KAAK,YAA9F;MACMuB,UAAU,GAAGF,KAAK,GAAGf,IAAI,CAACS,GAAL,CAASV,OAAT,EAAkBX,WAAW,GAAG,GAAhC,CAA3B;;MAGM8B,UAAU,GAAGF,OAAO,GAAG,CAACC,UAAU,GAAGrB,WAAW,GAAG,CAA5B,IAAiCqB,UAApC,GAAiD,CAA3E;MACME,GAAG,GAAGH,OAAO,GAAG,CAAH,GAAOpB,WAAW,GAAG,CAAxC;EAEAC,OAAO,GAAGA,OAAO,CAACuB,GAAR,CAAY,UAAAC,EAAA;WAAM,CAACA,EAAE,GAAGb,IAAI,GAAGU,UAAb,IAA2BH,KAA3B,GAAmCI,GAAnC;GAAlB,CAAV;EACArB,OAAO,GAAGA,OAAO,CAACsB,GAAR,CAAY,UAAAE,EAAA;WAAM,CAACA,EAAE,GAAGZ,IAAI,GAAGQ,UAAb,IAA2BH,KAA3B,GAAmCI,GAAnC;GAAlB,CAAV;MAEMI,YAAY,GAAG,CAACZ,IAAI,GAAGH,IAAR,IAAgBU,UAAhB,GAA6BH,KAA7B,GAAqCI,GAAG,GAAG,CAAhE;MACMK,aAAa,GAAG,CAACX,IAAI,GAAGH,IAAR,IAAgBQ,UAAhB,GAA6BH,KAA7B,GAAqCI,GAAG,GAAG,CAAjE;MACMM,MAAM,GAAG5B,OAAO,CAACuB,GAAR,CAAY,UAACC,EAAD,EAAKjB,CAAL;WAAW,CAACiB,EAAD,EAAKvB,OAAO,CAACM,CAAD,CAAZ,CAAA;GAAvB,CAAf;SACO;IAACqB,MAAM,QAAP;IAASnC,KAAK,EAAEiC,YAAhB;IAA8B/B,MAAM,EAAEgC;GAA7C;;AAEF,SAAgBE,KAAK5C,IAGA6C;MAFnB5C;MAAAC;MACAC;MAAAG;SAEOwC,IAAI,cAAKC,SAAS,CAAC,CAAD;IAAKzC,WAAW;IAA9B,EAAiCuC,SAAjC,CAAX;;AAEF,SAAgBC,KAAK9C,IAcA6C;0BAAA,EAAA;IAAAA,YAAwBjD,UAAU,EAAlC;;;MAbnBK,YAAA;MAAA+C,6BAAA;MACA7C,WADA;MACA8C,4BADA;MAEA5C,aAFA;MAEA6C,8BAFA;MAGA3C,cAHA;MAGA4C,+BAHA;MAIArC,4BAJA;MAKAL,sBALA;MAKAG,6CALA;MAMAD,YANA;MAMAyC,yCANA;MAOAlD,cAPA;MAQAM,gBARA;MASAE,kBATA;MAUAN,kBAVA;MAWAS,mBAXA;MAWAP,sCAXA;MAYA+C,wJAZA;;MAcMC;;;;;;;;IAAA;MAACX,kBAAD;MAASF,uBAAT;MAA8BC,yBAA9B;;MAGAa,OAAO,GAAsB/D,OAAO,CAAC,SAAD,CAA1C;;MAEIqD,SAAS,CAACW,YAAV,CAAuB,OAAvB,MAAoCjE,UAAxC,EAAoD;IAClDsD,SAAS,CAAC/C,YAAV,CAAuB,SAAvB,EAAkC,UAAOkD,IAAI,GAAGP,YAAP,GAAsBS,KAA7B,OAAA,IAAsCD,GAAG,GAAGP,aAAN,GAAsBS,MAA5D,CAAlC;;;EAEFI,OAAO,CAACzD,YAAR,CAAqB,MAArB,EAA6BsD,IAA7B;EACAG,OAAO,CAACzD,YAAR,CAAqB,iBAArB,EAAwCc,cAAxC;EACA2C,OAAO,CAACzD,YAAR,CAAqB,cAArB,EAAqC,KAAGgB,WAAxC;EACAyC,OAAO,CAACzD,YAAR,CAAqB,QAArB,EAA+B6C,MAAM,CAACL,GAAP,CAAW,UAAAmB,KAAA;WAAYT,IAAI,GAAGS,KAAK,CAAC,CAAD,CAAZ,MAAA,IAAmBR,GAAG,GAAGQ,KAAK,CAAC,CAAD,CAA9B,CAAH;GAApB,EAA4DC,IAA5D,CAAiE,GAAjE,CAA/B;;OAEK,IAAMC,IAAX,IAAmBN,UAAnB,EAA+B;IAC7BE,OAAO,CAACzD,YAAR,CAAqB6D,IAArB,EAA2BN,UAAU,CAACM,IAAD,CAArC;;;EAEFd,SAAS,CAACe,WAAV,CAAsBL,OAAtB;SACOV,SAAP;;AAEF,IAAagB,OAAO,GAAG,OAAhB;;;;"}