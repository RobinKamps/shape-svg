{"version":3,"file":"shapesvg.js","sources":["../src/consts.ts","../node_modules/@daybrush/utils/dist/utils.esm.js","../src/index.ts"],"sourcesContent":["export const TOP = \"top\";\nexport const BOTTOM = \"bottom\";\nexport const LEFT = \"left\";\nexport const RIGHT = \"right\";\nexport type DIRECTION = \"top\" | \"bottom\" | \"left\" | \"right\";\nexport type STROKE_LINEJOIN = \"bevel\" | \"round\" | \"miter\" | \"miter-clip\" | \"arcs\";\nexport const CLASS_NAME = \"__shape-svg\";\n","/*\nCopyright (c) 2018 Daybrush\n@name: @daybrush/utils\nlicense: MIT\nauthor: Daybrush\nrepository: https://github.com/daybrush/utils\n@version 0.5.2\n*/\n/**\n* @namespace\n* @name Consts\n*/\n\n/**\n* get string \"rgb\"\n* @memberof Color\n* @example\nimport {RGB} from \"@daybrush/utils\";\n\nconsole.log(RGB); // \"rgb\"\n*/\nvar RGB = \"rgb\";\n/**\n* get string \"rgba\"\n* @memberof Color\n* @example\nimport {RGBA} from \"@daybrush/utils\";\n\nconsole.log(RGBA); // \"rgba\"\n*/\n\nvar RGBA = \"rgba\";\n/**\n* get string \"hsl\"\n* @memberof Color\n* @example\nimport {HSL} from \"@daybrush/utils\";\n\nconsole.log(HSL); // \"hsl\"\n*/\n\nvar HSL = \"hsl\";\n/**\n* get string \"hsla\"\n* @memberof Color\n* @example\nimport {HSLA} from \"@daybrush/utils\";\n\nconsole.log(HSLA); // \"hsla\"\n*/\n\nvar HSLA = \"hsla\";\n/**\n* gets an array of color models.\n* @memberof Color\n* @example\nimport {COLOR_MODELS} from \"@daybrush/utils\";\n\nconsole.log(COLOR_MODELS); // [\"rgb\", \"rgba\", \"hsl\", \"hsla\"];\n*/\n\nvar COLOR_MODELS = [RGB, RGBA, HSL, HSLA];\n/**\n* get string \"function\"\n* @memberof Consts\n* @example\nimport {FUNCTION} from \"@daybrush/utils\";\n\nconsole.log(FUNCTION); // \"function\"\n*/\n\nvar FUNCTION = \"function\";\n/**\n* get string \"property\"\n* @memberof Consts\n* @example\nimport {PROPERTY} from \"@daybrush/utils\";\n\nconsole.log(PROPERTY); // \"property\"\n*/\n\nvar PROPERTY = \"property\";\n/**\n* get string \"array\"\n* @memberof Consts\n* @example\nimport {ARRAY} from \"@daybrush/utils\";\n\nconsole.log(ARRAY); // \"array\"\n*/\n\nvar ARRAY = \"array\";\n/**\n* get string \"object\"\n* @memberof Consts\n* @example\nimport {OBJECT} from \"@daybrush/utils\";\n\nconsole.log(OBJECT); // \"object\"\n*/\n\nvar OBJECT = \"object\";\n/**\n* get string \"string\"\n* @memberof Consts\n* @example\nimport {STRING} from \"@daybrush/utils\";\n\nconsole.log(STRING); // \"string\"\n*/\n\nvar STRING = \"string\";\n/**\n* get string \"number\"\n* @memberof Consts\n* @example\nimport {NUMBER} from \"@daybrush/utils\";\n\nconsole.log(NUMBER); // \"number\"\n*/\n\nvar NUMBER = \"number\";\n/**\n* get string \"undefined\"\n* @memberof Consts\n* @example\nimport {UNDEFINED} from \"@daybrush/utils\";\n\nconsole.log(UNDEFINED); // \"undefined\"\n*/\n\nvar UNDEFINED = \"undefined\";\n/**\n* Check whether the environment is window or node.js.\n* @memberof Consts\n* @example\nimport {IS_WINDOW} from \"@daybrush/utils\";\n\nconsole.log(IS_WINDOW); // false in node.js\nconsole.log(IS_WINDOW); // true in browser\n*/\n\nvar IS_WINDOW = typeof window !== UNDEFINED;\n/**\n* Check whether the environment is window or node.js.\n* @memberof Consts\n* @name document\n* @example\nimport {IS_WINDOW} from \"@daybrush/utils\";\n\nconsole.log(IS_WINDOW); // false in node.js\nconsole.log(IS_WINDOW); // true in browser\n*/\n\nvar doc = typeof document !== UNDEFINED && document;\nvar prefixes = [\"webkit\", \"ms\", \"moz\", \"o\"];\n/**\n * @namespace CrossBrowser\n */\n\n/**\n* Get a CSS property with a vendor prefix that supports cross browser.\n* @function\n* @param {string} property - A CSS property\n* @return {string} CSS property with cross-browser vendor prefix\n* @memberof CrossBrowser\n* @example\nimport {getCrossBrowserProperty} from \"@daybrush/utils\";\n\nconsole.log(getCrossBrowserProperty(\"transform\")); // \"transform\", \"-ms-transform\", \"-webkit-transform\"\nconsole.log(getCrossBrowserProperty(\"filter\")); // \"filter\", \"-webkit-filter\"\n*/\n\nvar getCrossBrowserProperty =\n/*#__PURE__*/\nfunction (property) {\n  if (!doc) {\n    return \"\";\n  }\n\n  var styles = (doc.body || doc.documentElement).style;\n  var length = prefixes.length;\n\n  if (typeof styles[property] !== UNDEFINED) {\n    return property;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var name = \"-\" + prefixes[i] + \"-\" + property;\n\n    if (typeof styles[name] !== UNDEFINED) {\n      return name;\n    }\n  }\n\n  return \"\";\n};\n/**\n* get string \"transfrom\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {TRANSFORM} from \"@daybrush/utils\";\n\nconsole.log(TRANSFORM); // \"transform\", \"-ms-transform\", \"-webkit-transform\"\n*/\n\nvar TRANSFORM =\n/*#__PURE__*/\ngetCrossBrowserProperty(\"transform\");\n/**\n* get string \"filter\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {FILTER} from \"@daybrush/utils\";\n\nconsole.log(FILTER); // \"filter\", \"-ms-filter\", \"-webkit-filter\"\n*/\n\nvar FILTER =\n/*#__PURE__*/\ngetCrossBrowserProperty(\"filter\");\n/**\n* get string \"animation\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {ANIMATION} from \"@daybrush/utils\";\n\nconsole.log(ANIMATION); // \"animation\", \"-ms-animation\", \"-webkit-animation\"\n*/\n\nvar ANIMATION =\n/*#__PURE__*/\ngetCrossBrowserProperty(\"animation\");\n/**\n* get string \"keyframes\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {KEYFRAMES} from \"@daybrush/utils\";\n\nconsole.log(KEYFRAMES); // \"keyframes\", \"-ms-keyframes\", \"-webkit-keyframes\"\n*/\n\nvar KEYFRAMES =\n/*#__PURE__*/\nANIMATION.replace(\"animation\", \"keyframes\");\n\n/**\n* @namespace\n* @name Utils\n*/\n\n/**\n* Check the type that the value is undefined.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {boolean} true if the type is correct, false otherwise\n* @example\nimport {isUndefined} from \"@daybrush/utils\";\n\nconsole.log(isUndefined(undefined)); // true\nconsole.log(isUndefined(\"\")); // false\nconsole.log(isUndefined(1)); // false\nconsole.log(isUndefined(null)); // false\n*/\n\nfunction isUndefined(value) {\n  return typeof value === UNDEFINED;\n}\n/**\n* Check the type that the value is object.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isObject} from \"@daybrush/utils\";\n\nconsole.log(isObject({})); // true\nconsole.log(isObject(undefined)); // false\nconsole.log(isObject(\"\")); // false\nconsole.log(isObject(null)); // false\n*/\n\nfunction isObject(value) {\n  return value && typeof value === OBJECT;\n}\n/**\n* Check the type that the value is isArray.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isArray} from \"@daybrush/utils\";\n\nconsole.log(isArray([])); // true\nconsole.log(isArray({})); // false\nconsole.log(isArray(undefined)); // false\nconsole.log(isArray(null)); // false\n*/\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n/**\n* Check the type that the value is string.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isString} from \"@daybrush/utils\";\n\nconsole.log(isString(\"1234\")); // true\nconsole.log(isString(undefined)); // false\nconsole.log(isString(1)); // false\nconsole.log(isString(null)); // false\n*/\n\nfunction isString(value) {\n  return typeof value === STRING;\n}\n/**\n* Check the type that the value is function.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isFunction} from \"@daybrush/utils\";\n\nconsole.log(isFunction(function a() {})); // true\nconsole.log(isFunction(() => {})); // true\nconsole.log(isFunction(\"1234\")); // false\nconsole.log(isFunction(1)); // false\nconsole.log(isFunction(null)); // false\n*/\n\nfunction isFunction(value) {\n  return typeof value === FUNCTION;\n}\n/**\n* divide text by space.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {Array} divided texts\n* @example\nimport {spliceSpace} from \"@daybrush/utils\";\n\nconsole.log(splitSpace(\"a b c d e f g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitSpace(\"'a,b' c 'd,e' f g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\n\nfunction splitSpace(text) {\n  // divide comma(,)\n  var matches = text.match(/(\"[^\"]*\")|('[^']*')|([^\\s()]*(?:\\((?:[^()]*|\\([^()]*\\))*\\))[^\\s()]*)|\\S+/g);\n  return matches || [];\n}\n/**\n* divide text by comma.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {Array} divided texts\n* @example\nimport {splitComma} from \"@daybrush/utils\";\n\nconsole.log(splitComma(\"a,b,c,d,e,f,g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitComma(\"'a,b',c,'d,e',f,g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\n\nfunction splitComma(text) {\n  // divide comma(,)\n  // \"[^\"]*\"|'[^']*'\n  var matches = text.match(/(\"[^\"]*\"|'[^']*'|[^,\\s()]*\\((?:[^()]*|\\([^()]*\\))*\\)[^,\\s()]*|[^,])+/g);\n  return matches ? matches.map(function (str) {\n    return str.trim();\n  }) : [];\n}\n/**\n* divide text by bracket \"(\", \")\".\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {object} divided texts\n* @example\nimport {splitBracket} from \"@daybrush/utils\";\n\nconsole.log(splitBracket(\"a(1, 2)\"));\n// {prefix: \"a\", value: \"1, 2\", suffix: \"\"}\nconsole.log(splitBracket(\"a(1, 2)b\"));\n// {prefix: \"a\", value: \"1, 2\", suffix: \"b\"}\n*/\n\nfunction splitBracket(text) {\n  var matches = /([^(]*)\\(([\\s\\S]*)\\)([\\s\\S]*)/g.exec(text);\n\n  if (!matches || matches.length < 4) {\n    return {};\n  } else {\n    return {\n      prefix: matches[1],\n      value: matches[2],\n      suffix: matches[3]\n    };\n  }\n}\n/**\n* divide text by number and unit.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {} divided texts\n* @example\nimport {splitUnit} from \"@daybrush/utils\";\n\nconsole.log(splitUnit(\"10px\"));\n// {prefix: \"\", value: 10, unit: \"px\"}\nconsole.log(splitUnit(\"-10px\"));\n// {prefix: \"\", value: -10, unit: \"px\"}\nconsole.log(splitUnit(\"a10%\"));\n// {prefix: \"a\", value: 10, unit: \"%\"}\n*/\n\nfunction splitUnit(text) {\n  var matches = /^([^\\d|e|\\-|\\+]*)((?:\\d|\\.|-|e-|e\\+)+)(\\S*)$/g.exec(text);\n\n  if (!matches) {\n    return {\n      prefix: \"\",\n      unit: \"\",\n      value: NaN\n    };\n  }\n\n  var prefix = matches[1];\n  var value = matches[2];\n  var unit = matches[3];\n  return {\n    prefix: prefix,\n    unit: unit,\n    value: parseFloat(value)\n  };\n}\n/**\n* transform strings to camel-case\n* @memberof Utils\n* @param {String} text - string\n* @return {String} camel-case string\n* @example\nimport {camelize} from \"@daybrush/utils\";\n\nconsole.log(camelize(\"transform-origin\")); // transformOrigin\nconsole.log(camelize(\"abcd_efg\")); // abcdEfg\nconsole.log(camelize(\"abcd efg\")); // abcdEfg\n*/\n\nfunction camelize(str) {\n  return str.replace(/[\\s-_]([a-z])/g, function (all, letter) {\n    return letter.toUpperCase();\n  });\n}\n/**\n* transform a camelized string into a lowercased string.\n* @memberof Utils\n* @param {string} text - a camel-cased string\n* @param {string} [separator=\"-\"] - a separator\n* @return {string}  a lowercased string\n* @example\nimport {decamelize} from \"@daybrush/utils\";\n\nconsole.log(decamelize(\"transformOrigin\")); // transform-origin\nconsole.log(decamelize(\"abcdEfg\", \"_\")); // abcd_efg\n*/\n\nfunction decamelize(str, separator) {\n  if (separator === void 0) {\n    separator = \"-\";\n  }\n\n  return str.replace(/([a-z])([A-Z])/g, function (all, letter, letter2) {\n    return \"\" + letter + separator + letter2.toLowerCase();\n  });\n}\n/**\n* Date.now() method\n* @memberof CrossBrowser\n* @return {number} milliseconds\n* @example\nimport {now} from \"@daybrush/utils\";\n\nconsole.log(now()); // 12121324241(milliseconds)\n*/\n\nfunction now() {\n  return Date.now ? Date.now() : new Date().getTime();\n}\n/**\n* window.requestAnimationFrame() method with cross browser.\n* @function\n* @memberof CrossBrowser\n* @param {FrameRequestCallback} callback - The function to call when it's time to update your animation for the next repaint.\n* @return {number} id\n* @example\nimport {requestAnimationFrame} from \"@daybrush/utils\";\n\nrequestAnimationFrame((timestamp) => {\n  console.log(timestamp);\n});\n*/\n\nvar requestAnimationFrame =\n/*#__PURE__*/\nfunction () {\n  var firstTime = now();\n  var raf = IS_WINDOW && (window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame);\n  return raf ? raf.bind(window) : function (callback) {\n    var currTime = now();\n    var id = window.setTimeout(function () {\n      callback(currTime - firstTime);\n    }, 1000 / 60);\n    return id;\n  };\n}();\n\n/**\n* @namespace\n* @name Color\n*/\n\n/**\n* Remove the # from the hex color.\n* @memberof Color\n* @param {} hex - hex color\n* @return {} hex color\n* @example\nimport {cutHex} from \"@daybrush/utils\";\n\nconsole.log(cutHex(\"#000000\")) // \"000000\"\n*/\n\nfunction cutHex(hex) {\n  return hex.replace(\"#\", \"\");\n}\n/**\n* convert hex color to rgb color.\n* @memberof Color\n* @param {} hex - hex color\n* @return {} rgb color\n* @example\nimport {hexToRGBA} from \"@daybrush/utils\";\n\nconsole.log(hexToRGBA(\"#00000005\"));\n// [0, 0, 0, 1]\nconsole.log(hexToRGBA(\"#201045\"));\n// [32, 16, 69, 1]\n*/\n\nfunction hexToRGBA(hex) {\n  var h = cutHex(hex);\n  var r = parseInt(h.substring(0, 2), 16);\n  var g = parseInt(h.substring(2, 4), 16);\n  var b = parseInt(h.substring(4, 6), 16);\n  var a = parseInt(h.substring(6, 8), 16) / 255;\n\n  if (isNaN(a)) {\n    a = 1;\n  }\n\n  return [r, g, b, a];\n}\n/**\n* convert 3(or 4)-digit hex color to 6(or 8)-digit hex color.\n* @memberof Color\n* @param {} hex - 3(or 4)-digit hex color\n* @return {} 6(or 8)-digit hex color\n* @example\nimport {toFullHex} from \"@daybrush/utils\";\n\nconsole.log(toFullHex(\"#123\")); // \"#112233\"\nconsole.log(toFullHex(\"#123a\")); // \"#112233aa\"\n*/\n\nfunction toFullHex(h) {\n  var r = h.charAt(1);\n  var g = h.charAt(2);\n  var b = h.charAt(3);\n  var a = h.charAt(4);\n  var arr = [\"#\", r, r, g, g, b, b, a, a];\n  return arr.join(\"\");\n}\n/**\n* convert hsl color to rgba color.\n* @memberof Color\n* @param {} hsl - hsl color(hue: 0 ~ 360, saturation: 0 ~ 1, lightness: 0 ~ 1, alpha: 0 ~ 1)\n* @return {} rgba color\n* @example\nimport {hslToRGBA} from \"@daybrush/utils\";\n\nconsole.log(hslToRGBA([150, 0.5, 0.4]));\n// [51, 153, 102, 1]\n*/\n\nfunction hslToRGBA(hsl) {\n  var h = hsl[0];\n  var s = hsl[1];\n  var l = hsl[2];\n\n  if (h < 0) {\n    h += Math.floor((Math.abs(h) + 360) / 360) * 360;\n  }\n\n  h %= 360;\n  var c = (1 - Math.abs(2 * l - 1)) * s;\n  var x = c * (1 - Math.abs(h / 60 % 2 - 1));\n  var m = l - c / 2;\n  var rgb;\n\n  if (h < 60) {\n    rgb = [c, x, 0];\n  } else if (h < 120) {\n    rgb = [x, c, 0];\n  } else if (h < 180) {\n    rgb = [0, c, x];\n  } else if (h < 240) {\n    rgb = [0, x, c];\n  } else if (h < 300) {\n    rgb = [x, 0, c];\n  } else if (h < 360) {\n    rgb = [c, 0, x];\n  }\n\n  var result = [Math.round((rgb[0] + m) * 255), Math.round((rgb[1] + m) * 255), Math.round((rgb[2] + m) * 255), hsl.length > 3 ? hsl[3] : 1];\n  return result;\n}\n/**\n* convert string to rgba color.\n* @memberof Color\n* @param {} - 3-hex(#000), 4-hex(#0000) 6-hex(#000000), 8-hex(#00000000) or RGB(A), or HSL(A)\n* @return {} rgba color\n* @example\nimport {stringToRGBA} from \"@daybrush/utils\";\n\nconsole.log(stringToRGBA(\"#000000\")); // [0, 0, 0, 1]\nconsole.log(stringToRGBA(\"rgb(100, 100, 100)\")); // [100, 100, 100, 1]\nconsole.log(stringToRGBA(\"hsl(150, 0.5, 0.4)\")); // [51, 153, 102, 1]\n*/\n\nfunction stringToRGBA(color) {\n  if (color.charAt(0) === \"#\") {\n    if (color.length === 4 || color.length === 5) {\n      return hexToRGBA(toFullHex(color));\n    } else {\n      return hexToRGBA(color);\n    }\n  } else if (color.indexOf(\"(\") !== -1) {\n    // in bracket.\n    var _a = splitBracket(color),\n        prefix = _a.prefix,\n        value = _a.value;\n\n    if (!prefix || !value) {\n      return;\n    }\n\n    var arr = splitComma(value);\n    var colorArr = [];\n    var length = arr.length;\n\n    switch (prefix) {\n      case RGB:\n      case RGBA:\n        for (var i = 0; i < length; ++i) {\n          colorArr[i] = parseFloat(arr[i]);\n        }\n\n        return colorArr;\n\n      case HSL:\n      case HSLA:\n        for (var i = 0; i < length; ++i) {\n          if (arr[i].indexOf(\"%\") !== -1) {\n            colorArr[i] = parseFloat(arr[i]) / 100;\n          } else {\n            colorArr[i] = parseFloat(arr[i]);\n          }\n        } // hsl, hsla to rgba\n\n\n        return hslToRGBA(colorArr);\n    }\n  }\n\n  return;\n}\n\n/**\n * Returns all element descendants of node that\n * match selectors.\n */\n\n/**\n * Checks if the specified class value exists in the element's class attribute.\n * @memberof DOM\n * @param - A DOMString containing one or more selectors to match\n * @param - If multi is true, a DOMString containing one or more selectors to match against.\n * @example\nimport {$} from \"@daybrush/utils\";\n\nconsole.log($(\"div\")); // div element\nconsole.log($(\"div\", true)); // [div, div] elements\n*/\n\nfunction $(selectors, multi) {\n  return multi ? doc.querySelectorAll(selectors) : doc.querySelector(selectors);\n}\n/**\n* Checks if the specified class value exists in the element's class attribute.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to search\n* @return {boolean} return false if the class is not found.\n* @example\nimport {hasClass} from \"@daybrush/utils\";\n\nconsole.log(hasClass(element, \"start\")); // true or false\n*/\n\nfunction hasClass(element, className) {\n  if (element.classList) {\n    return element.classList.contains(className);\n  }\n\n  return !!element.className.match(new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\"));\n}\n/**\n* Add the specified class value. If these classe already exist in the element's class attribute they are ignored.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to add\n* @example\nimport {addClass} from \"@daybrush/utils\";\n\naddClass(element, \"start\");\n*/\n\nfunction addClass(element, className) {\n  if (element.classList) {\n    element.classList.add(className);\n  } else {\n    element.className += \" \" + className;\n  }\n}\n/**\n* Removes the specified class value.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to remove\n* @example\nimport {removeClass} from \"@daybrush/utils\";\n\nremoveClass(element, \"start\");\n*/\n\nfunction removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else {\n    var reg = new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\");\n    element.className = element.className.replace(reg, \" \");\n  }\n}\n/**\n* Gets the CSS properties from the element.\n* @memberof DOM\n* @param elements - elements\n* @param properites - the CSS properties\n* @return returns CSS properties and values.\n* @example\nimport {fromCSS} from \"@daybrush/utils\";\n\nconsole.log(fromCSS(element, [\"left\", \"opacity\", \"top\"])); // {\"left\": \"10px\", \"opacity\": 1, \"top\": \"10px\"}\n*/\n\nfunction fromCSS(elements, properties) {\n  if (!elements || !properties || !properties.length) {\n    return {};\n  }\n\n  var element;\n\n  if (elements instanceof Element) {\n    element = elements;\n  } else if (elements.length) {\n    element = elements[0];\n  } else {\n    return {};\n  }\n\n  var cssObject = {};\n  var styles = window.getComputedStyle(element);\n  var length = properties.length;\n\n  for (var i = 0; i < length; ++i) {\n    cssObject[properties[i]] = styles[properties[i]];\n  }\n\n  return cssObject;\n}\n\nexport { RGB, RGBA, HSL, HSLA, COLOR_MODELS, FUNCTION, PROPERTY, ARRAY, OBJECT, STRING, NUMBER, UNDEFINED, IS_WINDOW, doc as document, getCrossBrowserProperty, TRANSFORM, FILTER, ANIMATION, KEYFRAMES, cutHex, hexToRGBA, toFullHex, hslToRGBA, stringToRGBA, isUndefined, isObject, isArray, isString, isFunction, splitSpace, splitComma, splitBracket, splitUnit, camelize, decamelize, now, requestAnimationFrame, $, hasClass, addClass, removeClass, fromCSS };\n//# sourceMappingURL=utils.esm.js.map\n","import { CLASS_NAME, STROKE_LINEJOIN } from \"./consts\";\nimport {hasClass, addClass, splitUnit} from \"@daybrush/utils\";\n\nexport interface Shape {\n    left?: number;\n    top?: number;\n    right?: number;\n    bottom?: number;\n    width?: number;\n    height?: number;\n    fill?: string;\n    strokeLinejoin?: STROKE_LINEJOIN;\n    strokeWidth?: number;\n    className?: string;\n    origin?: string | number;\n    [key: string]: any;\n}\nexport interface RoundRectShape extends Shape {\n  round?: number;\n  css?: boolean;\n}\nexport interface PolyShape extends Shape {\n  side?: number;\n  split?: number;\n  css?: boolean;\n  innerRadius?: number;\n}\nexport interface OvalShape extends Shape {\n  r?: number;\n  rx?: number;\n  ry?: number;\n}\nfunction makeDOM(tag: string) {\n  return document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n}\nfunction makeSVGDOM() {\n  const el = makeDOM(\"svg\");\n\n  addClass(el, CLASS_NAME);\n  return el;\n}\nfunction setAttributes(element: SVGElement, attributes: {[key: string]: any}) {\n  for (const name in attributes) {\n    element.setAttribute(name, attributes[name]);\n  }\n}\nfunction setStyles(element: SVGElement, styles: {[key: string]: any}) {\n  const cssText = [];\n\n  for (const name in styles) {\n    cssText.push(`${name}:${styles[name]};`);\n  }\n  element.style.cssText += cssText.join(\"\");\n}\nfunction getAbsoluteValue(value: string, pos: number, size: number) {\n  const info = splitUnit(value);\n\n  if (info.unit === \"%\") {\n    return (pos + size * info.value / 100) + \"px\";\n  } else if (info.unit === \"px\") {\n    return (pos + info.value) + \"px\";\n  } else {\n    return `calc(${pos}px + ${value})`;\n  }\n}\nfunction setOrigin(container: SVGElement, {\n  width,\n  height,\n  left,\n  top,\n  origin,\n}: {\n  width: number,\n  height: number,\n  left: number,\n  top: number,\n  origin: string | number,\n}) {\n  if (!origin) {\n    return;\n  }\n  let [ox, oy = ox]: string[] = `${origin}`.split(\" \");\n\n  ox = getAbsoluteValue(ox, left, width);\n  oy = getAbsoluteValue(oy, top, height);\n\n  container.style.transformOrigin = `${ox} ${oy}`;\n}\nfunction setViewBox(container: SVGElement, {\n  width,\n  height,\n  left,\n  right,\n  bottom,\n  top,\n  strokeWidth,\n  className,\n}: {\n  width: number,\n  height: number,\n  left: number,\n  right: number,\n  bottom: number,\n  top: number,\n  strokeWidth: number,\n  className?: string,\n}) {\n  if (container && hasClass(container, CLASS_NAME)) {\n    className && className.split(\" \").forEach(name => {\n      addClass(container, name);\n    });\n    const [, , boxWidth = 0, boxHeight = 0] = (container.getAttribute(\"viewBox\") || \"\").split(\" \")\n      .map(pos => parseFloat(pos || \"0\"));\n\n    container.setAttribute(\"viewBox\", \"0 0 \" +\n    // tslint:disable-next-line:max-line-length\n    `${Math.max(left + width + right + strokeWidth, boxWidth)} ${Math.max(top + height + bottom + strokeWidth, boxHeight)}`);\n  }\n}\n\nexport function getRect({\n  left = 0,\n  top = 0,\n  side = 3,\n  rotate = 0,\n  innerRadius = 100,\n  height = 0,\n  split = 1,\n  width = height ? 0 : 100,\n  strokeLinejoin = \"round\",\n  strokeWidth = 0,\n}: PolyShape) {\n  let xPoints: number[] = [];\n  let yPoints: number[] = [];\n  const sideCos = Math.cos(Math.PI / side);\n  const startRad = Math.PI / 180 * rotate +  Math.PI * ((side % 2 ? 0 : 1 / side) - 1 / 2);\n\n  for (let i = 0; i < side; ++i) {\n    const rad = Math.PI * (1 / side * 2 * i) + startRad;\n    const cos = Math.cos(rad);\n    const sin = Math.sin(rad);\n\n    xPoints.push(cos);\n    yPoints.push(sin);\n    if (innerRadius !== 100) {\n      if (sideCos <= innerRadius / 100) {\n        continue;\n      } else {\n        xPoints.push(innerRadius / 100 * Math.cos(rad + Math.PI / side));\n        yPoints.push(innerRadius / 100 * Math.sin(rad + Math.PI / side));\n      }\n    }\n  }\n  const minX = Math.min(...xPoints);\n  const minY = Math.min(...yPoints);\n  const maxX = Math.max(...xPoints);\n  const maxY = Math.max(...yPoints);\n  const isWidth = !!width;\n  const scale = isWidth ? width / (maxX - minX) : height / (maxY - minY);\n  const isOuter = strokeLinejoin === \"miter\" || strokeLinejoin === \"arcs\" || strokeLinejoin === \"miter-clip\";\n\n  const sideSin = Math.sin(Math.PI / side);\n  const innerCos = Math.min(sideCos, innerRadius / 100);\n  const innerScale = scale * innerCos;\n  const diagonal = strokeWidth / 2 / (sideCos === innerCos ? 1 : Math.sin(Math.atan(sideSin / (sideCos - innerCos))));\n  const outerScale = isOuter ? (innerScale + diagonal) / innerScale : 1;\n  const pos = isOuter ? 0 : strokeWidth / 2;\n\n  xPoints = xPoints.map(xp => (xp - minX * outerScale) * scale + pos);\n  yPoints = yPoints.map(yp => (yp - minY * outerScale) * scale + pos);\n\n  const pathWidth = (maxX - minX) * outerScale * scale + pos * 2;\n  const pathHeight = (maxY - minY) * outerScale * scale + pos * 2;\n  const length = xPoints.length;\n  const points = [];\n\n  points.push([left + xPoints[0], top + yPoints[0]]);\n  for (let i = 1; i <= length; ++i) {\n    const x1 = xPoints[i - 1];\n    const y1 = yPoints[i - 1];\n    const x2 = xPoints[i === length ? 0 : i];\n    const y2 = yPoints[i === length ? 0 : i];\n\n    for (let j = 1; j <= split; ++j) {\n      const x = (x1 * (split - j) + x2 * j) / split;\n      const y = (y1 * (split - j) + y2 * j) / split;\n\n      points.push([left + x, top + y]);\n    }\n  }\n\n  return {points, width: pathWidth, height: pathHeight};\n}\nexport function getPath(points: number[][]) {\n  return points.map((point, i) => {\n      return `${i === 0 ? \"M\" : \"L\"} ${point.join(\" \")}`;\n  }).join(\" \") + \" Z\";\n}\nexport function be(path: SVGPathElement, {\n  left = 0,\n  top = 0,\n  right = 0,\n  bottom = 0,\n  side,\n  split,\n  rotate,\n  innerRadius,\n  height,\n  width,\n  fill = \"transparent\",\n  strokeLinejoin = \"round\",\n  strokeWidth = 0,\n  css = false,\n  className,\n  ...attributes\n}: PolyShape,      container?: SVGElement) {\n  const {points, width: pathWidth, height: pathHeight } =\n    getRect({left, top, split, side, rotate, width, height, innerRadius, strokeLinejoin, strokeWidth});\n\n  setViewBox(container, {\n      left,\n      top,\n      bottom,\n      right,\n      className,\n      strokeWidth: 0,\n      width: pathWidth,\n      height: pathHeight,\n    });\n  const d = getPath(points);\n\n  css ? setStyles(path, {d : `path('${d}')`}) : setAttributes(path, {d});\n\n  setAttributes(path, {\n    fill,\n    \"stroke-linejoin\": strokeLinejoin,\n    \"stroke-width\": `${strokeWidth}`,\n    ...attributes,\n  });\n}\nexport function star({\n  side = 3,\n  innerRadius = 60 * Math.cos(Math.PI / side),\n}: PolyShape,        container?: SVGElement) {\n  return poly({...arguments[0], innerRadius}, container);\n}\nexport function poly(options: PolyShape, container: SVGElement = makeSVGDOM()) {\n  const path: SVGPathElement = makeDOM(\"path\") as SVGPathElement;\n\n  be(path, options, container);\n  container.appendChild(path);\n  return container;\n}\nexport function oval({\n  left = 0,\n  top = 0,\n  right = 0,\n  bottom = 0,\n  fill = \"transparent\",\n  strokeLinejoin = \"round\",\n  strokeWidth = 0,\n  className,\n  r = 0,\n  rx = r,\n  ry = r,\n  width = rx * 2,\n  height = ry * 2,\n  origin,\n  ...attributes\n}: OvalShape,\n                     container: SVGElement = makeSVGDOM(),\n) {\n  const ellipse: SVGEllipseElement = makeDOM(\"ellipse\") as SVGEllipseElement;\n  const halfStroke = strokeWidth / 2;\n\n  setViewBox(container, {\n    strokeWidth,\n    left,\n    top,\n    bottom,\n    right,\n    className,\n    width,\n    height,\n  });\n  setOrigin(ellipse, {\n    left: left + halfStroke,\n    top: top + halfStroke,\n    width,\n    height,\n    origin,\n  });\n\n  setAttributes(ellipse, {\n    fill,\n    \"cx\": left + halfStroke + width / 2,\n    \"cy\": top  + halfStroke + height / 2,\n    \"rx\": width / 2 - halfStroke,\n    \"ry\": height / 2 - halfStroke,\n    \"stroke-linejoin\": strokeLinejoin,\n    \"stroke-width\": `${strokeWidth}`,\n    ...attributes,\n  });\n  container.appendChild(ellipse);\n\n  return container;\n}\nexport function rect({\n  left = 0,\n  top = 0,\n  right = 0,\n  bottom = 0,\n  round = 0,\n  width,\n  height,\n  fill = \"transparent\",\n  strokeLinejoin = \"round\",\n  strokeWidth = 0,\n  css = false,\n  className,\n  ...attributes\n}: RoundRectShape,\n                     container: SVGElement = makeSVGDOM(),\n) {\n  const path: SVGPathElement = makeDOM(\"path\") as SVGPathElement;\n  setViewBox(container, {\n    left,\n    top,\n    bottom,\n    right,\n    className,\n    width,\n    height,\n    strokeWidth,\n  });\n  setOrigin(path, {\n    left,\n    top,\n    width,\n    height,\n    origin,\n  });\n  const halfStroke = strokeWidth / 2;\n  const pathWidth = width - round * 2;\n  const pathHeight = height - round * 2;\n  // tslint:disable-next-line:max-line-length\n  const d = `M${left + round + halfStroke},${top + halfStroke} h${pathWidth} a${round},${round} 0 0 1 ${round},${round} v${pathHeight} a${round},${round} 0 0 1 -${round},${round} h-${pathWidth} a${round},${round} 0 0 1 -${round},-${round} v-${pathHeight} a${round},${round} 0 0 1 ${round},-${round} z`;\n\n  css ? setStyles(path, {d : `path('${d}')`}) : setAttributes(path, {d});\n\n  setAttributes(path, {\n    fill,\n    \"stroke-linejoin\": strokeLinejoin,\n    \"stroke-width\": `${strokeWidth}`,\n    ...attributes,\n  });\n  container.appendChild(path);\n\n  return container;\n}\nexport const VERSION = \"#__VERSION__#\";\n"],"names":["CLASS_NAME","UNDEFINED","IS_WINDOW","window","doc","document","prefixes","getCrossBrowserProperty","property","styles","body","documentElement","style","length","i","name","TRANSFORM","FILTER","ANIMATION","KEYFRAMES","replace","splitUnit","text","matches","exec","prefix","unit","value","NaN","parseFloat","now","Date","getTime","requestAnimationFrame","firstTime","raf","webkitRequestAnimationFrame","mozRequestAnimationFrame","bind","callback","currTime","id","setTimeout","hasClass","element","className","classList","contains","match","RegExp","addClass","add","makeDOM","tag","createElementNS","makeSVGDOM","el","setAttributes","attributes","setAttribute","setStyles","cssText","push","join","getAbsoluteValue","pos","size","info","setOrigin","container","_a","width","height","left","top","origin","_b","ox","_c","oy","transformOrigin","setViewBox","right","bottom","strokeWidth","split","forEach","boxWidth","_d","boxHeight","Math","max","getRect","side","_e","rotate","_f","innerRadius","_g","_h","_j","_k","strokeLinejoin","_l","xPoints","yPoints","sideCos","cos","PI","startRad","rad","sin","minX","min","minY","maxX","maxY","isWidth","scale","isOuter","sideSin","innerCos","innerScale","diagonal","atan","outerScale","map","xp","yp","pathWidth","pathHeight","points","x1","y1","x2","y2","j","x","y","getPath","point","be","path","fill","css","d","star","poly","arguments","options","appendChild","oval","r","rx","ry","_m","_o","ellipse","halfStroke","rect","round","VERSION"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAMO,IAAMA,UAAU,GAAG,aAAnB;;ICNP;;;;;;;;IA0HA;;;;;;;;;IASA,IAAIC,SAAS,GAAG,WAAhB;IACA;;;;;;;;;;IAUA,IAAIC,SAAS,GAAG,OAAOC,MAAP,KAAkBF,SAAlC;IACA;;;;;;;;;;;IAWA,IAAIG,GAAG,GAAG,OAAOC,QAAP,KAAoBJ,SAApB,IAAiCI,QAA3C;IACA,IAAIC,QAAQ,GAAG,CAAC,QAAD,EAAW,IAAX,EAAiB,KAAjB,EAAwB,GAAxB,CAAf;IACA;;;;IAIA;;;;;;;;;;;;;IAaA,IAAIC,uBAAuB;IAC3B;IACA,UAAUC,QAAV,EAAoB;IAClB,MAAI,CAACJ,GAAL,EAAU;IACR,WAAO,EAAP;IACD;;IAED,MAAIK,MAAM,GAAG,CAACL,GAAG,CAACM,IAAJ,IAAYN,GAAG,CAACO,eAAjB,EAAkCC,KAA/C;IACA,MAAIC,MAAM,GAAGP,QAAQ,CAACO,MAAtB;;IAEA,MAAI,OAAOJ,MAAM,CAACD,QAAD,CAAb,KAA4BP,SAAhC,EAA2C;IACzC,WAAOO,QAAP;IACD;;IAED,OAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAApB,EAA4B,EAAEC,CAA9B,EAAiC;IAC/B,QAAIC,IAAI,GAAG,MAAMT,QAAQ,CAACQ,CAAD,CAAd,GAAoB,GAApB,GAA0BN,QAArC;;IAEA,QAAI,OAAOC,MAAM,CAACM,IAAD,CAAb,KAAwBd,SAA5B,EAAuC;IACrC,aAAOc,IAAP;IACD;IACF;;IAED,SAAO,EAAP;IACD,CAvBD;IAwBA;;;;;;;;;;IASA,IAAIC,SAAS;IACb;IACAT,uBAAuB,CAAC,WAAD,CAFvB;IAGA;;;;;;;;;IASA,IAAIU,MAAM;IACV;IACAV,uBAAuB,CAAC,QAAD,CAFvB;IAGA;;;;;;;;;IASA,IAAIW,SAAS;IACb;IACAX,uBAAuB,CAAC,WAAD,CAFvB;IAGA;;;;;;;;;IASA,IAAIY,SAAS;IACb;IACAD,SAAS,CAACE,OAAV,CAAkB,WAAlB,EAA+B,WAA/B,CAFA;AAIA,IA+JA;;;;;;;;;;;;;;;;;IAgBA,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;IACvB,MAAIC,OAAO,GAAG,gDAAgDC,IAAhD,CAAqDF,IAArD,CAAd;;IAEA,MAAI,CAACC,OAAL,EAAc;IACZ,WAAO;IACLE,MAAAA,MAAM,EAAE,EADH;IAELC,MAAAA,IAAI,EAAE,EAFD;IAGLC,MAAAA,KAAK,EAAEC;IAHF,KAAP;IAKD;;IAED,MAAIH,MAAM,GAAGF,OAAO,CAAC,CAAD,CAApB;IACA,MAAII,KAAK,GAAGJ,OAAO,CAAC,CAAD,CAAnB;IACA,MAAIG,IAAI,GAAGH,OAAO,CAAC,CAAD,CAAlB;IACA,SAAO;IACLE,IAAAA,MAAM,EAAEA,MADH;IAELC,IAAAA,IAAI,EAAEA,IAFD;IAGLC,IAAAA,KAAK,EAAEE,UAAU,CAACF,KAAD;IAHZ,GAAP;IAKD;AACD,IAwCA;;;;;;;;;;;IAUA,SAASG,GAAT,GAAe;IACb,SAAOC,IAAI,CAACD,GAAL,GAAWC,IAAI,CAACD,GAAL,EAAX,GAAwB,IAAIC,IAAJ,GAAWC,OAAX,EAA/B;IACD;IACD;;;;;;;;;;;;;;;IAcA,IAAIC,qBAAqB;IACzB;IACA,YAAY;IACV,MAAIC,SAAS,GAAGJ,GAAG,EAAnB;IACA,MAAIK,GAAG,GAAGjC,SAAS,KAAKC,MAAM,CAAC8B,qBAAP,IAAgC9B,MAAM,CAACiC,2BAAvC,IAAsEjC,MAAM,CAACkC,wBAAlF,CAAnB;IACA,SAAOF,GAAG,GAAGA,GAAG,CAACG,IAAJ,CAASnC,MAAT,CAAH,GAAsB,UAAUoC,QAAV,EAAoB;IAClD,QAAIC,QAAQ,GAAGV,GAAG,EAAlB;IACA,QAAIW,EAAE,GAAGtC,MAAM,CAACuC,UAAP,CAAkB,YAAY;IACrCH,MAAAA,QAAQ,CAACC,QAAQ,GAAGN,SAAZ,CAAR;IACD,KAFQ,EAEN,OAAO,EAFD,CAAT;IAGA,WAAOO,EAAP;IACD,GAND;IAOD,CAVD,EAFA;AAcA,IA+LA;;;;;;;;;;;;;IAYA,SAASE,QAAT,CAAkBC,OAAlB,EAA2BC,SAA3B,EAAsC;IACpC,MAAID,OAAO,CAACE,SAAZ,EAAuB;IACrB,WAAOF,OAAO,CAACE,SAAR,CAAkBC,QAAlB,CAA2BF,SAA3B,CAAP;IACD;;IAED,SAAO,CAAC,CAACD,OAAO,CAACC,SAAR,CAAkBG,KAAlB,CAAwB,IAAIC,MAAJ,CAAW,YAAYJ,SAAZ,GAAwB,SAAnC,CAAxB,CAAT;IACD;IACD;;;;;;;;;;;;IAWA,SAASK,QAAT,CAAkBN,OAAlB,EAA2BC,SAA3B,EAAsC;IACpC,MAAID,OAAO,CAACE,SAAZ,EAAuB;IACrBF,IAAAA,OAAO,CAACE,SAAR,CAAkBK,GAAlB,CAAsBN,SAAtB;IACD,GAFD,MAEO;IACLD,IAAAA,OAAO,CAACC,SAAR,IAAqB,MAAMA,SAA3B;IACD;IACF;;IC7sBD,SAASO,OAAT,CAAiBC,GAAjB;IACE,SAAOhD,QAAQ,CAACiD,eAAT,CAAyB,4BAAzB,EAAuDD,GAAvD,CAAP;IACD;;IACD,SAASE,UAAT;IACE,MAAMC,EAAE,GAAGJ,OAAO,CAAC,KAAD,CAAlB;IAEAF,EAAAA,QAAQ,CAACM,EAAD,EAAKxD,UAAL,CAAR;IACA,SAAOwD,EAAP;IACD;;IACD,SAASC,aAAT,CAAuBb,OAAvB,EAA4Cc,UAA5C;IACE,OAAK,IAAM3C,IAAX,IAAmB2C,UAAnB,EAA+B;IAC7Bd,IAAAA,OAAO,CAACe,YAAR,CAAqB5C,IAArB,EAA2B2C,UAAU,CAAC3C,IAAD,CAArC;IACD;IACF;;IACD,SAAS6C,SAAT,CAAmBhB,OAAnB,EAAwCnC,MAAxC;IACE,MAAMoD,OAAO,GAAG,EAAhB;;IAEA,OAAK,IAAM9C,IAAX,IAAmBN,MAAnB,EAA2B;IACzBoD,IAAAA,OAAO,CAACC,IAAR,CAAgB/C,IAAI,MAAJ,GAAQN,MAAM,CAACM,IAAD,CAAd,MAAhB;IACD;;IACD6B,EAAAA,OAAO,CAAChC,KAAR,CAAciD,OAAd,IAAyBA,OAAO,CAACE,IAAR,CAAa,EAAb,CAAzB;IACD;;IACD,SAASC,gBAAT,CAA0BrC,KAA1B,EAAyCsC,GAAzC,EAAsDC,IAAtD;IACE,MAAMC,IAAI,GAAG9C,SAAS,CAACM,KAAD,CAAtB;;IAEA,MAAIwC,IAAI,CAACzC,IAAL,KAAc,GAAlB,EAAuB;IACrB,WAAQuC,GAAG,GAAGC,IAAI,GAAGC,IAAI,CAACxC,KAAZ,GAAoB,GAA3B,GAAkC,IAAzC;IACD,GAFD,MAEO,IAAIwC,IAAI,CAACzC,IAAL,KAAc,IAAlB,EAAwB;IAC7B,WAAQuC,GAAG,GAAGE,IAAI,CAACxC,KAAZ,GAAqB,IAA5B;IACD,GAFM,MAEA;IACL,WAAO,UAAQsC,GAAR,UAAA,GAAmBtC,KAAnB,MAAP;IACD;IACF;;IACD,SAASyC,SAAT,CAAmBC,SAAnB,EAA0CC,EAA1C;UACEC;UACAC;UACAC;UACAC;UACAC;;IAQA,MAAI,CAACA,MAAL,EAAa;IACX;IACD;;IACG,MAAAC,6BAAA;IAAA,MAACC,UAAD;IAAA,MAAKC,UAAL;IAAA,MAAKC,4BAAL;;IAEJF,EAAAA,EAAE,GAAGb,gBAAgB,CAACa,EAAD,EAAKJ,IAAL,EAAWF,KAAX,CAArB;IACAQ,EAAAA,EAAE,GAAGf,gBAAgB,CAACe,EAAD,EAAKL,GAAL,EAAUF,MAAV,CAArB;IAEAH,EAAAA,SAAS,CAACzD,KAAV,CAAgBoE,eAAhB,GAAqCH,EAAE,MAAF,GAAME,EAA3C;IACD;;IACD,SAASE,UAAT,CAAoBZ,SAApB,EAA2CC,EAA3C;UACEC;UACAC;UACAC;UACAS;UACAC;UACAT;UACAU;UACAvC;;IAWA,MAAIwB,SAAS,IAAI1B,QAAQ,CAAC0B,SAAD,EAAYrE,UAAZ,CAAzB,EAAkD;IAChD6C,IAAAA,SAAS,IAAIA,SAAS,CAACwC,KAAV,CAAgB,GAAhB,EAAqBC,OAArB,CAA6B,UAAAvE,IAAA;IACxCmC,MAAAA,QAAQ,CAACmB,SAAD,EAAYtD,IAAZ,CAAR;IACD,KAFY,CAAb;;IAGM,QAAA6D;;UAAA;IAAA,QAAKE,UAAL;IAAA,QAAKS,iCAAL;IAAA,QAAmBC,UAAnB;IAAA,QAAmBC,kCAAnB;;IAGNpB,IAAAA,SAAS,CAACV,YAAV,CAAuB,SAAvB,EAAkC;IAE/B+B,IAAAA,IAAI,CAACC,GAAL,CAASlB,IAAI,GAAGF,KAAP,GAAeW,KAAf,GAAuBE,WAAhC,EAA6CG,QAA7C,OAAA,GAA0DG,IAAI,CAACC,GAAL,CAASjB,GAAG,GAAGF,MAAN,GAAeW,MAAf,GAAwBC,WAAjC,EAA8CK,SAA9C,CAF3B,CAAlC;IAGD;IACF;;AAED,aAAgBG,QAAQtB;UACtBM;UAAAH;UACAK;UAAAJ;UACAc;UAAAK;UACAC;UAAAC;UACAC;UAAAC;UACAC;UAAA1B;UACA2B;UAAAd;UACAe;UAAA7B;UACA8B;UAAAC;UACAC;UAAAnB;IAEA,MAAIoB,OAAO,GAAa,EAAxB;IACA,MAAIC,OAAO,GAAa,EAAxB;IACA,MAAMC,OAAO,GAAGhB,IAAI,CAACiB,GAAL,CAASjB,IAAI,CAACkB,EAAL,GAAUf,IAAnB,CAAhB;IACA,MAAMgB,QAAQ,GAAGnB,IAAI,CAACkB,EAAL,GAAU,GAAV,GAAgBb,MAAhB,GAA0BL,IAAI,CAACkB,EAAL,IAAW,CAACf,IAAI,GAAG,CAAP,GAAW,CAAX,GAAe,IAAIA,IAApB,IAA4B,IAAI,CAA3C,CAA3C;;IAEA,OAAK,IAAI/E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+E,IAApB,EAA0B,EAAE/E,CAA5B,EAA+B;IAC7B,QAAMgG,GAAG,GAAGpB,IAAI,CAACkB,EAAL,IAAW,IAAIf,IAAJ,GAAW,CAAX,GAAe/E,CAA1B,IAA+B+F,QAA3C;IACA,QAAMF,GAAG,GAAGjB,IAAI,CAACiB,GAAL,CAASG,GAAT,CAAZ;IACA,QAAMC,GAAG,GAAGrB,IAAI,CAACqB,GAAL,CAASD,GAAT,CAAZ;IAEAN,IAAAA,OAAO,CAAC1C,IAAR,CAAa6C,GAAb;IACAF,IAAAA,OAAO,CAAC3C,IAAR,CAAaiD,GAAb;;IACA,QAAId,WAAW,KAAK,GAApB,EAAyB;IACvB,UAAIS,OAAO,IAAIT,WAAW,GAAG,GAA7B,EAAkC;IAChC;IACD,OAFD,MAEO;IACLO,QAAAA,OAAO,CAAC1C,IAAR,CAAamC,WAAW,GAAG,GAAd,GAAoBP,IAAI,CAACiB,GAAL,CAASG,GAAG,GAAGpB,IAAI,CAACkB,EAAL,GAAUf,IAAzB,CAAjC;IACAY,QAAAA,OAAO,CAAC3C,IAAR,CAAamC,WAAW,GAAG,GAAd,GAAoBP,IAAI,CAACqB,GAAL,CAASD,GAAG,GAAGpB,IAAI,CAACkB,EAAL,GAAUf,IAAzB,CAAjC;IACD;IACF;IACF;;IACD,MAAMmB,IAAI,GAAGtB,IAAI,CAACuB,GAAL,MAAA,CAAAvB,IAAA,EAAYc,OAAZ,CAAb;IACA,MAAMU,IAAI,GAAGxB,IAAI,CAACuB,GAAL,MAAA,CAAAvB,IAAA,EAAYe,OAAZ,CAAb;IACA,MAAMU,IAAI,GAAGzB,IAAI,CAACC,GAAL,MAAA,CAAAD,IAAA,EAAYc,OAAZ,CAAb;IACA,MAAMY,IAAI,GAAG1B,IAAI,CAACC,GAAL,MAAA,CAAAD,IAAA,EAAYe,OAAZ,CAAb;IACA,MAAMY,OAAO,GAAG,CAAC,CAAC9C,KAAlB;IACA,MAAM+C,KAAK,GAAGD,OAAO,GAAG9C,KAAK,IAAI4C,IAAI,GAAGH,IAAX,CAAR,GAA2BxC,MAAM,IAAI4C,IAAI,GAAGF,IAAX,CAAtD;IACA,MAAMK,OAAO,GAAGjB,cAAc,KAAK,OAAnB,IAA8BA,cAAc,KAAK,MAAjD,IAA2DA,cAAc,KAAK,YAA9F;IAEA,MAAMkB,OAAO,GAAG9B,IAAI,CAACqB,GAAL,CAASrB,IAAI,CAACkB,EAAL,GAAUf,IAAnB,CAAhB;IACA,MAAM4B,QAAQ,GAAG/B,IAAI,CAACuB,GAAL,CAASP,OAAT,EAAkBT,WAAW,GAAG,GAAhC,CAAjB;IACA,MAAMyB,UAAU,GAAGJ,KAAK,GAAGG,QAA3B;IACA,MAAME,QAAQ,GAAGvC,WAAW,GAAG,CAAd,IAAmBsB,OAAO,KAAKe,QAAZ,GAAuB,CAAvB,GAA2B/B,IAAI,CAACqB,GAAL,CAASrB,IAAI,CAACkC,IAAL,CAAUJ,OAAO,IAAId,OAAO,GAAGe,QAAd,CAAjB,CAAT,CAA9C,CAAjB;IACA,MAAMI,UAAU,GAAGN,OAAO,GAAG,CAACG,UAAU,GAAGC,QAAd,IAA0BD,UAA7B,GAA0C,CAApE;IACA,MAAMzD,GAAG,GAAGsD,OAAO,GAAG,CAAH,GAAOnC,WAAW,GAAG,CAAxC;IAEAoB,EAAAA,OAAO,GAAGA,OAAO,CAACsB,GAAR,CAAY,UAAAC,EAAA;IAAM,WAAA,CAACA,EAAE,GAAGf,IAAI,GAAGa,UAAb,IAA2BP,KAA3B,GAAmCrD,GAAnC;IAAsC,GAAxD,CAAV;IACAwC,EAAAA,OAAO,GAAGA,OAAO,CAACqB,GAAR,CAAY,UAAAE,EAAA;IAAM,WAAA,CAACA,EAAE,GAAGd,IAAI,GAAGW,UAAb,IAA2BP,KAA3B,GAAmCrD,GAAnC;IAAsC,GAAxD,CAAV;IAEA,MAAMgE,SAAS,GAAG,CAACd,IAAI,GAAGH,IAAR,IAAgBa,UAAhB,GAA6BP,KAA7B,GAAqCrD,GAAG,GAAG,CAA7D;IACA,MAAMiE,UAAU,GAAG,CAACd,IAAI,GAAGF,IAAR,IAAgBW,UAAhB,GAA6BP,KAA7B,GAAqCrD,GAAG,GAAG,CAA9D;IACA,MAAMpD,MAAM,GAAG2F,OAAO,CAAC3F,MAAvB;IACA,MAAMsH,MAAM,GAAG,EAAf;IAEAA,EAAAA,MAAM,CAACrE,IAAP,CAAY,CAACW,IAAI,GAAG+B,OAAO,CAAC,CAAD,CAAf,EAAoB9B,GAAG,GAAG+B,OAAO,CAAC,CAAD,CAAjC,CAAZ;;IACA,OAAK,IAAI3F,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAID,MAArB,EAA6B,EAAEC,CAA/B,EAAkC;IAChC,QAAMsH,EAAE,GAAG5B,OAAO,CAAC1F,CAAC,GAAG,CAAL,CAAlB;IACA,QAAMuH,EAAE,GAAG5B,OAAO,CAAC3F,CAAC,GAAG,CAAL,CAAlB;IACA,QAAMwH,EAAE,GAAG9B,OAAO,CAAC1F,CAAC,KAAKD,MAAN,GAAe,CAAf,GAAmBC,CAApB,CAAlB;IACA,QAAMyH,EAAE,GAAG9B,OAAO,CAAC3F,CAAC,KAAKD,MAAN,GAAe,CAAf,GAAmBC,CAApB,CAAlB;;IAEA,SAAK,IAAI0H,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAInD,KAArB,EAA4B,EAAEmD,CAA9B,EAAiC;IAC/B,UAAMC,CAAC,GAAG,CAACL,EAAE,IAAI/C,KAAK,GAAGmD,CAAZ,CAAF,GAAmBF,EAAE,GAAGE,CAAzB,IAA8BnD,KAAxC;IACA,UAAMqD,CAAC,GAAG,CAACL,EAAE,IAAIhD,KAAK,GAAGmD,CAAZ,CAAF,GAAmBD,EAAE,GAAGC,CAAzB,IAA8BnD,KAAxC;IAEA8C,MAAAA,MAAM,CAACrE,IAAP,CAAY,CAACW,IAAI,GAAGgE,CAAR,EAAW/D,GAAG,GAAGgE,CAAjB,CAAZ;IACD;IACF;;IAED,SAAO;IAACP,IAAAA,MAAM,QAAP;IAAS5D,IAAAA,KAAK,EAAE0D,SAAhB;IAA2BzD,IAAAA,MAAM,EAAE0D;IAAnC,GAAP;IACD;AACD,aAAgBS,QAAQR;IACtB,SAAOA,MAAM,CAACL,GAAP,CAAW,UAACc,KAAD,EAAQ9H,CAAR;IACd,WAAO,CAAGA,CAAC,KAAK,CAAN,GAAU,GAAV,GAAgB,GAAnB,OAAA,GAA0B8H,KAAK,CAAC7E,IAAN,CAAW,GAAX,CAAjC;IACH,GAFM,EAEJA,IAFI,CAEC,GAFD,IAEQ,IAFf;IAGD;AACD,aAAgB8E,GAAGC,MAAsBxE,IAiBtBD;IAhBjB,MAAAO,YAAA;IAAA,MAAAH,6BAAA;IAAA,MACAK,WADA;IAAA,MACAJ,4BADA;IAAA,MAEAc,aAFA;IAAA,MAEAN,8BAFA;IAAA,MAGAY,cAHA;IAAA,MAGAX,+BAHA;IAAA,MAIAU,cAJA;IAAA,MAKAR,gBALA;IAAA,MAMAU,kBANA;IAAA,MAOAE,4BAPA;IAAA,MAQAzB,kBARA;IAAA,MASAD,gBATA;IAAA,MAUAyB,YAVA;IAAA,MAUA+C,yCAVA;IAAA,MAWA7C,sBAXA;IAAA,MAWAI,6CAXA;IAAA,MAYAH,mBAZA;IAAA,MAYAf,oCAZA;IAAA,MAaAgB,WAbA;IAAA,MAaA4C,gCAbA;IAAA,MAcAnG,wBAdA;IAAA,MAeAa,qLAfA;;IAiBM,MAAA2C;;;;;;;;;;;QAAA;IAAA,MAAC8B,kBAAD;IAAA,MAASF,oBAAT;IAAA,MAA2BC,sBAA3B;;IAGNjD,EAAAA,UAAU,CAACZ,SAAD,EAAY;IAClBI,IAAAA,IAAI,MADc;IAElBC,IAAAA,GAAG,KAFe;IAGlBS,IAAAA,MAAM,QAHY;IAIlBD,IAAAA,KAAK,OAJa;IAKlBrC,IAAAA,SAAS,WALS;IAMlBuC,IAAAA,WAAW,EAAE,CANK;IAOlBb,IAAAA,KAAK,EAAE0D,SAPW;IAQlBzD,IAAAA,MAAM,EAAE0D;IARU,GAAZ,CAAV;IAUA,MAAMe,CAAC,GAAGN,OAAO,CAACR,MAAD,CAAjB;IAEAa,EAAAA,GAAG,GAAGpF,SAAS,CAACkF,IAAD,EAAO;IAACG,IAAAA,CAAC,EAAG,WAASA,CAAT;IAAL,GAAP,CAAZ,GAA2CxF,aAAa,CAACqF,IAAD,EAAO;IAACG,IAAAA,CAAC;IAAF,GAAP,CAA3D;IAEAxF,EAAAA,aAAa,CAACqF,IAAD;IACXC,IAAAA,IAAI;IACJ,uBAAmBzC;IACnB,oBAAgB,KAAGlB;SAChB1B,WAJQ,CAAb;IAMD;AACD,aAAgBwF,KAAK5E,IAGAD;UAFnBO;UAAAiB;UACAf;UAAAmB;IAEA,SAAOkD,IAAI,cAAKC,SAAS,CAAC,CAAD;IAAKnD,IAAAA,WAAW;QAA9B,EAAiC5B,SAAjC,CAAX;IACD;AACD,aAAgB8E,KAAKE,SAAoBhF;IAAA,0BAAA,EAAA;IAAAA,IAAAA,YAAwBd,UAAU,EAAlC;;;IACvC,MAAMuF,IAAI,GAAmB1F,OAAO,CAAC,MAAD,CAApC;IAEAyF,EAAAA,EAAE,CAACC,IAAD,EAAOO,OAAP,EAAgBhF,SAAhB,CAAF;IACAA,EAAAA,SAAS,CAACiF,WAAV,CAAsBR,IAAtB;IACA,SAAOzE,SAAP;IACD;AACD,aAAgBkF,KAAKjF,IAiBAD;IAAA,0BAAA,EAAA;IAAAA,IAAAA,YAAwBd,UAAU,EAAlC;;;IAhBnB,MAAAqB,YAAA;IAAA,MAAAH,6BAAA;IAAA,MACAK,WADA;IAAA,MACAJ,4BADA;IAAA,MAEAc,aAFA;IAAA,MAEAN,8BAFA;IAAA,MAGAY,cAHA;IAAA,MAGAX,+BAHA;IAAA,MAIAa,YAJA;IAAA,MAIA+C,yCAJA;IAAA,MAKA7C,sBALA;IAAA,MAKAI,6CALA;IAAA,MAMAH,mBANA;IAAA,MAMAf,oCANA;IAAA,MAOAvC,wBAPA;IAAA,MAQAuD,SARA;IAAA,MAQAoD,0BARA;IAAA,MASAnD,UATA;IAAA,MASAoD,2BATA;IAAA,MAUAlD,UAVA;IAAA,MAUAmD,2BAVA;IAAA,MAWAC,aAXA;IAAA,MAWApF,mCAXA;IAAA,MAYAqF,cAZA;IAAA,MAYApF,oCAZA;IAAA,MAaAG,kBAbA;IAAA,MAcAjB,+JAdA;;IAkBA,MAAMmG,OAAO,GAAsBzG,OAAO,CAAC,SAAD,CAA1C;IACA,MAAM0G,UAAU,GAAG1E,WAAW,GAAG,CAAjC;IAEAH,EAAAA,UAAU,CAACZ,SAAD,EAAY;IACpBe,IAAAA,WAAW,aADS;IAEpBX,IAAAA,IAAI,MAFgB;IAGpBC,IAAAA,GAAG,KAHiB;IAIpBS,IAAAA,MAAM,QAJc;IAKpBD,IAAAA,KAAK,OALe;IAMpBrC,IAAAA,SAAS,WANW;IAOpB0B,IAAAA,KAAK,OAPe;IAQpBC,IAAAA,MAAM;IARc,GAAZ,CAAV;IAUAJ,EAAAA,SAAS,CAACyF,OAAD,EAAU;IACjBpF,IAAAA,IAAI,EAAEA,IAAI,GAAGqF,UADI;IAEjBpF,IAAAA,GAAG,EAAEA,GAAG,GAAGoF,UAFM;IAGjBvF,IAAAA,KAAK,OAHY;IAIjBC,IAAAA,MAAM,QAJW;IAKjBG,IAAAA,MAAM;IALW,GAAV,CAAT;IAQAlB,EAAAA,aAAa,CAACoG,OAAD;IACXd,IAAAA,IAAI;IACJ,UAAMtE,IAAI,GAAGqF,UAAP,GAAoBvF,KAAK,GAAG;IAClC,UAAMG,GAAG,GAAIoF,UAAP,GAAoBtF,MAAM,GAAG;IACnC,UAAMD,KAAK,GAAG,CAAR,GAAYuF;IAClB,UAAMtF,MAAM,GAAG,CAAT,GAAasF;IACnB,uBAAmBxD;IACnB,oBAAgB,KAAGlB;SAChB1B,WARQ,CAAb;IAUAW,EAAAA,SAAS,CAACiF,WAAV,CAAsBO,OAAtB;IAEA,SAAOxF,SAAP;IACD;AACD,aAAgB0F,KAAKzF,IAeAD;IAAA,0BAAA,EAAA;IAAAA,IAAAA,YAAwBd,UAAU,EAAlC;;;IAdnB,MAAAqB,YAAA;IAAA,MAAAH,6BAAA;IAAA,MACAK,WADA;IAAA,MACAJ,4BADA;IAAA,MAEAc,aAFA;IAAA,MAEAN,8BAFA;IAAA,MAGAY,cAHA;IAAA,MAGAX,+BAHA;IAAA,MAIAa,aAJA;IAAA,MAIAgE,8BAJA;IAAA,MAKAzF,gBALA;IAAA,MAMAC,kBANA;IAAA,MAOA0B,YAPA;IAAA,MAOA6C,yCAPA;IAAA,MAQA5C,sBARA;IAAA,MAQAG,6CARA;IAAA,MASAF,mBATA;IAAA,MASAhB,oCATA;IAAA,MAUAiB,WAVA;IAAA,MAUA2C,gCAVA;IAAA,MAWAnG,wBAXA;IAAA,MAYAa,oJAZA;;IAgBA,MAAMoF,IAAI,GAAmB1F,OAAO,CAAC,MAAD,CAApC;IACA6B,EAAAA,UAAU,CAACZ,SAAD,EAAY;IACpBI,IAAAA,IAAI,MADgB;IAEpBC,IAAAA,GAAG,KAFiB;IAGpBS,IAAAA,MAAM,QAHc;IAIpBD,IAAAA,KAAK,OAJe;IAKpBrC,IAAAA,SAAS,WALW;IAMpB0B,IAAAA,KAAK,OANe;IAOpBC,IAAAA,MAAM,QAPc;IAQpBY,IAAAA,WAAW;IARS,GAAZ,CAAV;IAUAhB,EAAAA,SAAS,CAAC0E,IAAD,EAAO;IACdrE,IAAAA,IAAI,MADU;IAEdC,IAAAA,GAAG,KAFW;IAGdH,IAAAA,KAAK,OAHS;IAIdC,IAAAA,MAAM,QAJQ;IAKdG,IAAAA,MAAM;IALQ,GAAP,CAAT;IAOA,MAAMmF,UAAU,GAAG1E,WAAW,GAAG,CAAjC;IACA,MAAM6C,SAAS,GAAG1D,KAAK,GAAGyF,KAAK,GAAG,CAAlC;IACA,MAAM9B,UAAU,GAAG1D,MAAM,GAAGwF,KAAK,GAAG,CAApC;;IAEA,MAAMf,CAAC,GAAG,OAAIxE,IAAI,GAAGuF,KAAP,GAAeF,UAAnB,OAAA,IAAiCpF,GAAG,GAAGoF,UAAvC,QAAA,GAAsD7B,SAAtD,OAAA,GAAoE+B,KAApE,MAAA,GAA6EA,KAA7E,YAAA,GAA4FA,KAA5F,MAAA,GAAqGA,KAArG,OAAA,GAA+G9B,UAA/G,OAAA,GAA8H8B,KAA9H,MAAA,GAAuIA,KAAvI,aAAA,GAAuJA,KAAvJ,MAAA,GAAgKA,KAAhK,QAAA,GAA2K/B,SAA3K,OAAA,GAAyL+B,KAAzL,MAAA,GAAkMA,KAAlM,aAAA,GAAkNA,KAAlN,OAAA,GAA4NA,KAA5N,QAAA,GAAuO9B,UAAvO,OAAA,GAAsP8B,KAAtP,MAAA,GAA+PA,KAA/P,YAAA,GAA8QA,KAA9Q,OAAA,GAAwRA,KAAxR,OAAV;IAEAhB,EAAAA,GAAG,GAAGpF,SAAS,CAACkF,IAAD,EAAO;IAACG,IAAAA,CAAC,EAAG,WAASA,CAAT;IAAL,GAAP,CAAZ,GAA2CxF,aAAa,CAACqF,IAAD,EAAO;IAACG,IAAAA,CAAC;IAAF,GAAP,CAA3D;IAEAxF,EAAAA,aAAa,CAACqF,IAAD;IACXC,IAAAA,IAAI;IACJ,uBAAmBzC;IACnB,oBAAgB,KAAGlB;SAChB1B,WAJQ,CAAb;IAMAW,EAAAA,SAAS,CAACiF,WAAV,CAAsBR,IAAtB;IAEA,SAAOzE,SAAP;IACD;AACD,IAAO,IAAM4F,OAAO,GAAG,OAAhB;;;;;;;;;;;;;;;;;;;"}